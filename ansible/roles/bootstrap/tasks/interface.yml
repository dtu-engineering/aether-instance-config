- name: User - Create
  ansible.builtin.shell: adduser "{{ interface_user }}" --disabled-password --gecos ""
  args:
    executable: /bin/bash
  become: true
  become_user: root

- name: Node.js - Configure apt source
  ansible.builtin.shell: curl -sL https://deb.nodesource.com/setup_{{ nodejs_version }}.x | sudo bash -
  args:
    executable: /bin/bash
  become: true
  become_user: root

- name: Node.js - Update apt source
  ansible.builtin.shell: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
  args:
    executable: /bin/bash
  become: true
  become_user: root

- name: Interface - Install Dependencies
  ansible.builtin.package:
    name:
      - jq
      - nginx
      - nodejs
    state: present
  become: true
  become_user: root

- name: Instance Metadata - Get IMDSv2 Token
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/api/token
    method: PUT
    headers:
      X-aws-ec2-metadata-token-ttl-seconds: 3600
    return_content: true
  register: imds_v2_token

- name: Instance Metadata - Get Public IPv4 Addr
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/public-ipv4
    headers:
      X-aws-ec2-metadata-token: '{{ imds_v2_token.content }}'
    return_content: true
  register: public_ipv4

- name: Interface - Configure Nginx Proxy
  ansible.builtin.shell: |
    bash -c "cat > /etc/nginx/conf.d/default.conf" <<EOF
    upstream interface {
      server 127.0.0.1:5000;
    }
    server {
      listen 9080;
      server_name {{ public_ipv4.content }};
      location {{ interface_nginx_path }} {
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header Host \$host;
        proxy_pass http://interface;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        error_log /var/log/nginx/error.log debug;
      }
      location /health {
        access_log off;
        return 200 "healthy\n";
      }
    }
    EOF
  args:
    executable: /bin/bash
  become: true
  become_user: root

- name: Interface - Remove Default Nginx Config
  file:
    path: '/etc/nginx/sites-enabled/default'
    state: absent

- name: Interface - Restart Nginx Service
  ansible.builtin.service:
    name: nginx
    state: restarted
  become: true
  become_user: root

- name: Interface - Copy Interface Package Files
  ansible.builtin.copy:
    src: files/
    dest: '{{ interface_install_path }}'

- name: Interface - NPM Package Install
  ansible.builtin.shell: npm i
  args:
    chdir: '{{ interface_install_path }}'
    executable: /bin/bash
  become: true
  become_user: root
